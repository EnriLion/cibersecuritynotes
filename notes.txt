--CibersercurityLinuxBasic--

--Diferences between grep and egrep--

--Using Sed to find a Replace--

*Search for the word mysql in the snort.conf file using grep, like so:*

$ cat /etc/snort/snort.conf | grep mysql

*Save the output in another file and  replace every occurence of mysql witth MySQL

$ sed /s/mysql/MySQL/g /etc/snort/snort.conf > snort2.conf

(Use sed to find an replace keyword and phrases)

/ = separated 
g =  globally
s = search
...................
s = search
%>> / mysql = we are searching mysql
%>>>>>>/MySQL = we are replacing with it

#Replace only the second occurence (word)

$ sed /s/mysql/MySQL/2 /etc/snort/snort.conf > snort2.conf

#For working  with scroll with larger files(more and less)

--Controlling the Display with more--

-> use "n" to highlight and search move between words

--usr/share/wordlist/metsaploit = directory of mutliple wordlist ( cand be used to brute force passwords in  various passowrd protected devices using Metasplit(most popular pentesting and hacking framework)

>>>>> there are not longer passwords.lst in the file instead of passwords is a tar file that contain more than 14 million passwords but you need to use gunzip to decompress the file to use it because is a long file of over 14 million passwords

Note: gunzip = Command reduces the size of named files to decompress it 

>>>>>> gunzip = is used to unzip files that have benn compressed with the gzip algorthm( lossless compression algorithm that reduces the size of a file without losing data)

>>>>>> tar -xvf = is used to extract only one or more files  and can be used to create list, and extract files from archives.

>> the difference betwen them is that gunzip extract everything and with that you could only extract one or do more.

--3-Analyzing and managing networks--

Understanding networking is crucial for any aspiring hacker( a good hacker nees to know how to connect to and interact with that network understanding:

Internet Protocol(IP)
Domain Name System(DNS)
Media Access Control(MAC) 
Network Interface Card(NIC)
Local Area Network(LAN)
Boradcast Addresss...


--Analyzing networks with ifconfig--

ifconfig - to get network information
output:
1)ethoLinkencap:EthernetHWaddr 00:0c29:ba:82:of 
2)inet addr:192.168.181.131 3)Bcast:192.168.181.255 4)Mask:255.255.255.0
5)lo Linkencap: Local Loopback
inet addr:127.0.0.1 Mask:255.0.0.0
--snip--
6)wlan0 Link encap:EthernetHWaddr 00:c0:ca:3f:ee:02
 IS short for Ethernet0( linux start counti at 0 rathern than 1) the ethener interfaces show up the same format(eth1, eth2 and so forth) and is listed followed by Haddr and the address is stamped on every piece of network NIC usually reffered to as the MAC address

2) contains the IP address is currently assigned to that network interface(192.168.131)

3)Broadcast Adress(Bcast) (address used to send out the information to all IPs on the subnet)

4)Network Mask(used to determine what part of the IP address is connected to the local network)

5)Is a short for loopback address and is sometimes called localhost(lo)(localhost is represented 127.0.0.1)

6)The third connectio is wlan0(appears only if we have a wirless interfaceor adapter, as I do here and also displays the MAC address of that device(HWaddr)

the infomration of ifconfign enables to connect and manipulate our local area network(LAN) settings and essential skill for hacking

--Checking wireless network devices with iwconfig--

iwconfig = to gather crucial information for wireless hacking such as IP, it's MAC address, what mode it's in, and more. The informaiton you can glean from this command is particularly important when you're using wireless hacking tools like aircrack-ng.

$ iwconfig 

wlano IEEE 8o2.11bg ESSID:off/any
Mode:Managed Access Point: Not Associated Tx-Power=20 dBm
--snip--
lo no wireless extensions

etho no wireless extensions

#the output tells us that the only network interface with wireless extensions is wlan0, which is what we would expect. Neither lo nor eth0 has any wireless extensions

#Our device wlan0 and says that the IEEE 8o1.11 is capable if b: and g, two early wirless communication standars and most wireless devices now include n  as well)n is the latest standard).

#and mode:Managed in constrat to monitor or promiscous mode, we'll need promiscous mode(cracking wireless passwords)

#we can see that the wireless adapter is not connected(Not Associated) to an Access Point(AP) and that its power is 20 dBm, which represent the strength of signal. We'll spend more time with  the chapter    .


--Changing your networkin Information--

A skill full ability is to being able to change your IP address for example ina denial-of-service(DoS) attack, and can spoof your IP so that the attack appears to come from another source, thus helping you evade IP capture during forensic analysis. This si a relatively simple task in Linux, and it's doen with the ifconfig 

--Changing your IPAddress--

ifconfig eth0 192.168.181.115

#Linux will sumply return the command prompt and say nothing that is a good thing that yout IP address has changed to new IP address you just assigned.

--Spoofing your MAC Address--

Is possible to change your mac address using  ifconfig as well this tehcnique is useful for bypassin network access controls.
to spoof you MAC address use the command down option to tkae down the interface(eth0)

Is possible to change your mac address using  ifconfig as well this tehcnique is useful for bypassin network access controls.
to spoof you MAC address use the command down option to tkae down the interface(eth0), then if command folllwed by the hw(hardware and thernet and the new spoofed address and finally we up option to change to tkae place:

$ ifconfig eth0 down

$ ifconfig eth0 hw ether 00:11:22:33:44:55
 
$ ifconfig eth0 up

and now check again ifconfig if has changed we could run it again.

--Assigning New Ip Addresses from the DHCP Server--

Linux has a dameon(a process that runs in the background) (dhcpd) of the Dymanic Host Configuration Protocol(DHCP).. is makes a great resource for forensic analysts to trace hackers with after an attack(it's useful to understand how the DHCP server, protocl works)

To request an IP address from DHCP, simply call the DHCP server with the command(dhclient) folowed by the interface you wnat the address assigned to different distributtion uses different clients but debian uses dhclient:

$ dhclient eth0

The dhclient command sends a DHCPDISCOVER request from the network interface specified(eht0) and then receives an offer(DHCPOFFER) from the DHCP server(192.168.182.131) and confirmst he Ip assignment the DHCP server with a dhcp request

$ ifconfig

Dependinf the configuraiton of the DHCP server the Ip address assigned in each case might be different.

--Manipulating the domain name system--

Hackers cand find a treasure trove of information on a target in it s Domain Name System(DNS); is a critical component of the internet, altough it's designed to translate domain names to IP addresses a hacker can use it to garner information on the target


-Examining-DNS-with-dig-

One of the most useful ommands for the aspiring hacker(dig) which offers a way together DNS about a target domain. The stored DNS inofmration can be a key piece of early reconnaissance to obtain before attacking.

For instance enter dig hackers-arise.com and add the ns option(nameserver). The nameserver for hackers-arise.com is displayed in the ANSWER SECTION:

$ dig hackers-arise.com ns

ADDITIONAL SECTION the query reveals the ip of the dns server sercing hackers-arise.com(this information is critical for attacks on email systems)( for exmpale info the ww... email servers is shown in the AUTHORITY SECTION


$ dig hackers-arise.com ns

; <<>> DiG 9.18.12-0ubuntu0.22.04.1-Ubuntu <<>> hackers-arise.com ns
;; global options: +cmd
;; Got answer:
;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 42960
;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1

;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags:; udp: 65494
;; QUESTION SECTION:
;hackers-arise.com.		IN	NS

;; ANSWER SECTION:
hackers-arise.com.	21600	IN	NS	ns6.wixdns.net.
hackers-arise.com.	21600	IN	NS	ns7.wixdns.net.

;; Query time: 148 msec
;; SERVER: 127.0.0.53#53(127.0.0.53) (UDP)
;; WHEN: Thu May 25 16:48:01 CST 2023
;; MSG SIZE  rcvd: 92

#dg command to get information on email servers connected to a domain by adding the mx(mail exchange server) option. This information is critical for attacks on eamil systems; below shows the informations is critifical ofr attacks on email systems ( info of the wwws.hackers-arise.com email servers is shown in the AUTHORITY SECTION 

$ dig hackers-arise.com mx

--snip--

;; QUESTION SECTION:
;hackers-arise.com.		IN	MX

;; ANSWER SECTION:
hackers-arise.com.	3600	IN	MX	40 alt3.aspmx.l.google.com.
hackers-arise.com.	3600	IN	MX	30 alt2.aspmx.l.google.com.
hackers-arise.com.	3600	IN	MX	10 aspmx.l.google.com.
hackers-arise.com.	3600	IN	MX	50 alt4.aspmx.l.google.com.
hackers-arise.com.	3600	IN	MX	20 alt1.aspmx.l.google.com.

--snip--

The most common Linux DNS server is the Berkley Internet Name Domain(BIND). In some cases, Linux users will refer to DNS as BIND(DNS and BIND both map indindividual domain names to IP addresses)

--Changing your DNS Server-

vim /etc/resolv.conf (or wether editor you liked)

you could changed it with the DNS of google nameserver 8.8.8.8

we could achieved it as well as doing redirection i/o:

echo "nameserver 8.8.8.8" > /etc/resolv.conf

#Your system will got to the Google public DNS server to resolve domain names to IP addesses(domain names take a little longer to resolve(probably milisencods) therefore to maintain speed but keep the option of using a public server, you might want to retain the resolv.conf file and follow it with a DNS server

#Note: If you're using a DHCP address and the DHCP server provides a DNS setting, the DHCP server will replace the contents of the file when it renews the DHCP address

--Mapping your own ip addresses-

hosts file  = performs domain name(IP address translation) and is located at /etc/hosts and kind of as with DNS(you can use it to specify your own IP addresses - domain name mapping(can determine which IP address your browser goes in other domain in our browser. As a hacker this can be useful for hijacking a TCP connection on our lcoal area network to direct traffic to a malicious web server with a tool such(dnsspoof)

The hosts file contains only a mapping for your localhost, at 127.0.0.1 we can add IP address mapped to any domain we want. As an exapmle: we could map www.bankofamerica.com (192.168.181.131)


127.0.0.1	localhost
127.0.1.1	leon
192.168.181.131 bankofamerica.com

# The following lines are desirable for IPv6 capable hosts
::1     ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters

The endeavors like dnsspoof and Ettercap to direct any traffic on your LAN(www.bankofamerica.com) to our web server

--Using apt to handle software--

-Searching for a Package-

$ apt-cache search keyword


--Adding repositories to your sources.lsit file--

$ vi /etc/apt/sources.list

Linux distributions divide repositories into separate categories like Ubuntu breaks out its repository as follows:

- main: contains supported open source software

- universe: contains community-maintained open source software

- multiverse: contains software restricted by copyright or other legal issues

- restricted: contains proprietary device drivers

- backports: contains package from later releases

To install oracle 8 we could do it by apt-get install oracle-java8-installer command but we need to add the necessary repositories:

deb http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main
deb­src http://ppa.launchpad.net/webupd8team/java/ubuntu precise main

---Chapter 5---

--Granting Permision--

The three levels of permission are as follows:

*r = permission to read. This grants permission only to view and edit a file

*w = permission to write. This allows users to view and edit a file

*x = permission to execute. Allows users to execute a file(not necessarily view or edit it)


--Granting Ownership to an Individual User--

chown(change owner)

$ chown bob /tmp/bosbfile (Grants the user account bob for Ownership)

--Granting Ownership to a Group--

chgrp( change group)

The root group needs access to the hacking tools, whereas the security folk only need access to defensive tools such as an intrusion dection system(IDS)

$ chgrp securiy newIDS

This command passes the securiy group, ownership of newIDS

--Checking permissions--

$ ls -l /usr/share/hashcat
(1) (2) (3)
drwxwr-xr-x 5 root 4096 Dec 5:10:47 charsets
(1 -the file type)(2- The permission on the file for owner, groups and users, respectively) (3-The number of links(This topic is beyond the scope of the book.)

Another example:

-rw-r--r--1 root root 33685504 June 28 2018 hascat.hctast

after the file is called we initial( indicates it's a file) the permissions rw- tell us that the owner has read and write permission but not execute permission.

The next set of permission(r--) represents those of the group and shows that the group has read permision but not write or execute permissions. And finally we see that the rest of the users also have onlt read permission(r--)

--Changing permission--

---Changing Permission with Decimal Notation---
 All the permission are represented in bynary in an operatyng system, so ON and OFF switches are represented by 1 and 0 and for exmple rwx(three on/off switches we granted to the same to 111 in binary)

A binary set is easy represented in an octal(starts with 0 and ends with 7)

--------------
BianryOctalrwx
--------------

000 0 ---
--------------

000 1 --x

--------------

010 2 -w-

--------------

011 3 --x

--------------

100 4 r--

--------------

101 5 r--

--------------

110 6 rw-

--------------

111 7 rwx

--------------

Some examples

rwx
421 = 7

So if we wanted to represent all permissios for the owner, group, and all users, we could write it as follows: 777

Here's where the shortcut comes in. By passing chmod three octal digits(one for each rwx set) followed by a filename, we can change permissions of user:

chmod 774 hashcat.hcsat

we could check it again and we are going to expect:

-rwxrwxr--

--Changing Permissions with UGO--

You need to find what way more suits for you. The symbolic method is often referred to as the UGO syntax

We can alter the  operator, inclue the permission you want to add or remove(rwx) and finally the name of the file to apply it to.

We want to remove the write permission from the user that the file  hascat.hcstat to could enter the following:

$ chmod u-w hascat.hcstat

Says to remove(-) the write (w) permission from hashcat.hcstat for the user(u)

--Giving root execute Permission on a New Tool--

For default the hackingtyools that we download are files with the default 666 and 777 respective

#We can give ourseleves permission to execute newhackertool by entering

$ chmod 766 newhacketool

$ ls -l

--snip--

-rwxrw-rw-1 root root 1072 Dec 5 11:17 newhackertool

As you now undestand, this grant us (as the owner) all permissions, inclusing execute, and grants the group and everyone else only read and write permissions(4 + 2 = 6)

--Setting more secure default permissions with masks--

Linux automatically assigns base permissions- usually 666 for files and 77 for directories. We can change the default permission allocated ot fils an directiores created by each user with the umask(unmask) method. The umask method represents the permissions you want to remove from the base permissions on a file or a directory to make them more secure.

Umask = three-digit decimal number corresponding to the three permissions digits but the umask number is subtracted from the permission number to give the new permissions status. This means that when a new file or directoy is created, its permissions are set to the default value mins in umask.

--------------------------------------------------------
New Files                |   New directories
--------------------------------------------------------
6 6 6                    |   7 7 7 Linux base permissions
--------------------------------------------------------
0 2 2                    |   - 0 2 2 umask
--------------------------------------------------------
6 4 4                    |   7 5 5  Resulting permissions
--------------------------------------------------------

The previous tables show how a umask value of 022 affects the permissions on a new files and directories

For example if the umask is set to the 022 a newfile with the original default permissions of 666 will now have the permissions 644 meaning the owner has both readn and write permissions, and the group and all other users have only read permission.

In Kali as Debian distributions the umask is preconfigured to 022 meaning the Kali default is 644 for files and 755 for directories

To change the umask value for a user, edit the file /home/username/.profile and add umask 007 to set it so only the user and members of the user's group have permissions.

--Special permissions--

Linux has three special permission that are slightly more complicated. The special permissions are set user ID(SUID) or group ID(SGID) and sticky bit.

--Granting Temporary Root Permissions with SUID--

The SUID bit says tha any user can execute the file with the permissions of the owner but those permissions don't extend beyond the use of that file

To set the SUID bit,  enter a 4 beofre the regular permissions, so a file with a new resulting permission of 644 is represented by 4644 when the SUID bit is set. for example in a permission 644 is represented as 4644  when the SUID bit is set


--Granting the Root User's Group Permissions SGID--

SGID grants temporary elevated permissions, but it grants the permissions of the file owner's group, rathern than of the file's owner.

The SGID bit is represented as 2 before the regular permissions, so a new file with the resulting permissions 644 would be represented as 2644 when the  SGID bit is set, You would use the chmod command for this( chmod 2644 filename)

-- The Outmoded Sticky Bit --

The sticky bit is a permission bit that you can set on a directory to allow a user to delete or rename files within that directory.

-- Special Permissions, Privilege Escalation, and the Hacker--

A hacker could use the Linux system through privelege escalation using root privileges, one way to do this is to exploit the SUID bit. A system administrator or software developer might set the SUID bit on a program to allow that program access to files with root privileges. For instance,scripts that need to change passwords often have the SUID bit set; the hacker can use that permission to gain temporary root privileges and do something malicious such as get access to the passwords at /etc/shadow

#In this case, we want to find files anywhere on the filesystem, for the root user or other sysadmin with the permissions 4000, we can use the find command:

# find / -user root -perm -4000

# With this command we start looking at the top of the filesystem with the / syntax. Then looks everywhere below /for files that are owned by root, specified with user root, and that have the SUID permission bit set( -perm -4000)

and we get an output like this:

/usr/bin/chsh
/usr/bin/gspasswd
/usr/bin/pkexec
/usr/bin/sudo
/usr/bin/passwd
/usr/bin/kismet_capture

--snip--

cd/ usr/bin

ls -l

­rwxr­xr­x 1 root root 176272 Jul 18 2018 stunnel4
­rwxr­xr­x 1 root root 26696 Mar 17 2018 sucrack
1)rwsr­xr­x 1 root root 140944 Jul 5 2018 sudo

#We could see that has an s in place of x this is how the linux represents that the SUID and a hacker could gain control of access  expliting the SUID and SGID 

--6 Process Management--

--viewing processes--

ps aux( will show all process running on the systems for all users)

May of the dails(PID, %CPU, TIME, COMMAND and so on)

Columns:

USER - The user who invoked the process

PID - The process ID

%CPU - The percent of CPU this process is using

%MEM - The percent of memory this process is using

COMMAND - The name of the command that started the process

--Filtering by process Name--

Metasploil exploitation framework(the most widely used exploitation framework and nearly every hacker's good friend)

$ msfconsole

$ ps aux | grep msfconsole # We filtered the otuput in this listing, we should see all the processes that match the term msfconsole. The PostgreSQL( uses metaspoit)
root 39756 0.0 0.0 4304 716 pts/2 Ss+ 15:13 0:00 sh ­c service
postgresql start && msfdb init & msfconsole
root 39759 35.1 15.2 4304 227888 pts/2 Sl+ 15:13 1:36 ruby /usr/bin/
msfconsole
root 39892 0.0 0.0 4304 940 pts/2 S+ 15:18 0:00 grep msfconsole

We could see in the third column(CPU column) that it's using 35.1 percent of our CPU, and consult the fourth column that it's using the 15.2 percent of our system memory

--Finding the Greediest Processes with  top---

top  = know which procesess are using the most resources

$ top

top ­ 15:31:17 up 2 days, ^;50, 4 users, load average: 0.00, 0.04, 0.09
Tasks: 176 total, 1 running, 175 sleeping, 0 stopped, 0 zombie
%Cpu(s): 1.3 us, 0.7 sy, ).) ni, 97.4 id, 0.0 wa, 0.0 hi 0.0 si 0.0
KiB Mem : 1491220 total, 64848 free, 488272 used, 938100 buff/cache
KiB Swap : 1046524 total, 1044356 free, 2168 used. 784476 avail MEM
PID USER PR NI VIRT RES
SHR S %CPU %MEM TIME+ COMMAND
39759 root 20 0 893180 247232 11488 S 0.7 16.6 1:47.88 ruby
39859 root 20 0 27308 16796 14272 S 0.3 1.2 1:47.88 postgres
39933 root 20 0 293936 61500 29108 S 0.7 4.1 1:47.88 Xorg

Sysadmin ofte keep top running in a terminal to monitor use of process resources

H or ? - interactive commands
Q will quit top

--Changing Process Priority with nice--

We can use nice to suggest that a process should be elevated in priority

"When you use how "nice" you will be to other uses: if you process is using most of the system resources, you aren't being very nice"

The values of nice range from -20 to +19 with zero being the defualt value ( a high value translates to a low priority and low nice value trsnaltes to a high priority)

-20            0                  +19
|---------------|-----------------|
Most         Default           Least likey to 
likely        nice             receive priority
to            value
receive
priority

--Setting the Priority When Starting a Process--

nice -n -10 /bin/slowprocess # to increment a value allocating it more resources


nice -n -10 /bin/slowprocess # lower priority to the process


--Changing the priority of a running process with renice--

The renice command takes absolute values between -20 and 19 and sets the priority to that particular level, rather than increasing or drecreasing form the level at whcih it started.

renice 20 6996(rince the slowprocess of the pid 6996)

